/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/


import React, { forwardRef, useRef } from 'react';
import { useGLTF } from "@react-three/drei";
import { useCylinder , useLockConstraint } from '@react-three/cannon';

export const Wheel= forwardRef(({ radius = 0.8, leftSide, ...props }, ref) => {
  const { nodes, materials } = useGLTF("./Wheel.glb");


  useCylinder(() => ({ mass: 40, type: 'Kinematic', material: 'wheel', collisionFilterGroup: 0, args: [radius, radius, 0.8, 32],
  position: [0, 0, 0],  rotation: [0, 0, Math.PI / 2],  ...props }), ref);


  

  return (
    <mesh ref={ref} scale={(leftSide ? 4 : -4)}> 
    <group
        rotation={[0, 0, Math.PI / 2]}
        scale={[0.17251013, 0.17251019, 0.17251019]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh003.geometry}
          material={materials["Material.010"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh003_1.geometry}
          material={materials.tire}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh003_2.geometry}
          material={materials["Material.028"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh003_3.geometry}
          material={materials["Material.027"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh003_4.geometry}
          material={materials["Material.012"]}
        />

        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh003_6.geometry}
          material={materials["Material.011"]}
        />
      </group>
    </mesh>
  );
});


useGLTF.preload("./Wheel.glb");
