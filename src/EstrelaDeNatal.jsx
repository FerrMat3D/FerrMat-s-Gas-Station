/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef,useEffect  } from "react";
import { useGLTF } from "@react-three/drei";
import * as THREE from 'three';
import { ShaderMaterial } from 'three';

export function EstrelaDeNatal(props) {
  const { nodes, materials } = useGLTF("./EstrelaDeNatal.glb");


  const material = new ShaderMaterial({
    uniforms: {
      colorStart: { value: new THREE.Vector3(16, 20, 20) },
      colorEnd: { value: new THREE.Vector3(0, 0, 0) },
      time: { value: 0.0 }, // Inicialmente, o tempo é 0
    },
    vertexShader:  `
    void main() {
      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
    }
  `,
    fragmentShader: `
    uniform float time; // Um valor entre 0 e 1 controlando a transição
uniform vec3 colorStart; // Cor inicial [10, 0, 10]
uniform vec3 colorEnd; // Cor final [1, 0, 1]

void main() {
  // Use a função sin para criar uma transição suave com fade in e fade out
  float transition = clamp(sin(time * 3.14159265359), 0.0, 1.0);

  // Interpole entre as cores de início e fim com base na transição
  vec3 color = mix(colorStart, colorEnd, transition);

  gl_FragColor = vec4(color, 1.0);
}
  `,
  });


  const currentTimeRef = useRef(0);

  useEffect(() => {
    let animationFrameId;

    const updateMaterialTime = () => {
      const time = (performance.now() % 3000) / 1000;
      currentTimeRef.current = time;
      material.uniforms.time.value = time;
      animationFrameId = requestAnimationFrame(updateMaterialTime);
    };

    updateMaterialTime();

    return () => {
      cancelAnimationFrame(animationFrameId);
    };
  },  [material]); // Executa apenas uma vez ao montar o componente




  return (
    <group {...props} dispose={null}>
      <group rotation={[2.35619454, -4e-8, Math.PI / 2]}>

        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane001_1.geometry}
          material={materials.Estrutura}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane001_2.geometry}
          material={material}
        />
      </group>
    </group>
  );
}

useGLTF.preload("./EstrelaDeNatal.glb");
